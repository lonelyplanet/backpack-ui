{"version":3,"file":"main.48ad25053eddb2f3ce5d.bundle.js","sources":["webpack:///./src/components/listButton/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport radium from \"radium\";\nimport cn from \"classnames\";\n\nimport colors from \"../../styles/colors\";\nimport timing from \"../../styles/timing\";\nimport { fontSizeHeading5 } from \"../../styles/typography\";\nimport { rgba } from \"../../utils/color\";\nimport iconFromString from \"../../utils/icon\";\nimport { outline } from \"../../utils/mixins\";\nimport propTypes from \"../../utils/propTypes\";\nimport createQAHook from \"../../utils/createQAHook\";\n\nconst styles = {\n  alignItems: \"center\",\n  backgroundColor: colors.bgPrimary,\n  border: 0,\n  borderRadius: \"50%\",\n  boxShadow: `${rgba(colors.bgOverlay, 0.2)} 0 ${4 / fontSizeHeading5}em ${16 / fontSizeHeading5}em`,\n  color: colors.textPrimary,\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  fontSize: `${fontSizeHeading5}px`,\n  height: `${(54 / fontSizeHeading5)}em`,\n  justifyContent: \"center\",\n  lineHeight: 1,\n  padding: 0,\n  transition: `box-shadow ${timing.fast} ease-in-out,\n    transform ${timing.fast} ease-in-out`,\n  width: `${(54 / fontSizeHeading5)}em`,\n  WebkitTapHighlightColor: rgba(colors.bgOverlay, 0.04),\n\n  \":active\": {\n    boxShadow: `${rgba(colors.bgOverlay, 0.2)} 0 ${(4 / fontSizeHeading5) / 3}em ${(16 / fontSizeHeading5) / 2}em`,\n    transform: \"translateY(1px)\",\n  },\n\n  \":focus\": outline(4),\n};\n\nconst iconProps = {\n  style: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\n\nconst ListButton = ({\n  onClick,\n  icon,\n  label,\n  owns,\n  id,\n  className,\n  style,\n  qaHook,\n}) => (\n  <button\n    id={id}\n    className={cn(\"ListButton\", className)}\n    style={[styles, style]}\n    onClick={onClick}\n    title={label}\n    aria-label={label}\n    aria-owns={owns}\n    data-testid={qaHook ? createQAHook(label, cn(\"ListButton\", className), \"btn\") : null}\n  >\n    {iconFromString(icon, iconProps)}\n  </button>\n);\n\nListButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  icon: PropTypes.oneOf([\n    \"Bookmark\",\n    \"BookmarkActive\",\n    \"BookmarkAlt\",\n    \"BookmarkAltActive\",\n    \"Ellipsis\",\n    \"Map\",\n  ]).isRequired,\n  label: PropTypes.string,\n  owns: PropTypes.string,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: propTypes.style,\n  qaHook: PropTypes.bool,\n};\n\nListButton.defaultProps = {\n  label: null,\n  owns: null,\n  id: null,\n  className: null,\n  style: null,\n  qaHook: false,\n};\n\nexport default radium(ListButton);\n"],"mappings":"AAAA","sourceRoot":""}